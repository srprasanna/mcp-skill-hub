[tool.poetry]
name = "mcp-skills-server"
version = "0.1.0"
description = "MCP server for dynamic Claude skill loading with hot-reload support"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/yourusername/mcp-skills-server"
repository = "https://github.com/yourusername/mcp-skills-server"
keywords = ["mcp", "claude", "skills", "ai", "llm"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "mcp_skills", from = "src"}]

[tool.poetry.dependencies]
python = "^3.13"
mcp = ">=0.9.0"
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"
pyyaml = "^6.0.0"
watchdog = "^3.0.0"
aiofiles = "^23.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.0.0"
ruff = "^0.1.0"
mypy = "^1.7.0"
types-pyyaml = "^6.0.0"

[tool.poetry.scripts]
mcp-skills = "mcp_skills.__main__:run"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py313"]
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py313"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = []

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=mcp_skills",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
]
asyncio_mode = "auto"
